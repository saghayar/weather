plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.5'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.paymentology'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'
targetCompatibility = '17'


configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    all*.exclude module: 'spring-boot-starter-logging'
    all*.exclude module: 'logback-classic'
}


repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2022.0.2")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'
    implementation 'org.springframework.boot:spring-boot-starter-cache'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.0'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-api:2.1.0'

    implementation 'org.liquibase:liquibase-core'
    implementation 'org.mapstruct:mapstruct:1.5.3.Final'
    implementation 'org.mapstruct:mapstruct-processor:1.5.3.Final'
    implementation 'org.projectlombok:lombok'
    implementation 'org.liquibase:liquibase-core'
    implementation 'commons-io:commons-io:2.10.0'

    runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly 'com.h2database:h2'

    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'

    testAnnotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    testImplementation 'org.springframework.boot:spring-boot-starter-validation'
    testImplementation 'com.github.tomakehurst:wiremock-standalone:2.27.2'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

var preview = '--enable-preview'
tasks.withType(JavaCompile).configureEach {
    options.compilerArgs += preview
}

tasks.withType(Test).configureEach {
    jvmArgs += preview
}

tasks.withType(JavaExec).configureEach {
    jvmArgs += preview
}
tasks.named('test') {
    useJUnitPlatform()
}
